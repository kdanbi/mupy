{"ast":null,"code":"var _jsxFileName = \"/Users/danbikim/Development/Capstone/client/src/components/chat/Chat.js\";\n//Thanks to the following for help:\n// * https://codepen.io/johnludena/pen/JvMvzB\n// * https://codepen.io/jenning/pen/JZzeJW\nvar data = {\n  headerText: \"hello hello âœ¨\",\n  pText: \"I'm one (1) cute bot!\",\n  p2Text: \"Made with React + Dialogflow\",\n  userMessages: [],\n  botMessages: [],\n  botGreeting: \"oh hi! who are you?\",\n  botLoading: false\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUserMessages = newMessage => {\n      if (!newMessage) {\n        return;\n      }\n\n      var updatedMessages = this.state.userMessages;\n      var updatedBotMessages = this.state.botMessages;\n      this.setState({\n        userMessages: updatedMessages.concat(newMessage),\n        botLoading: true\n      }); // Replace with your Dialogflow client token\n\n      var request = new Request(\"https://api.dialogflow.com/v1/query?v=20150910&contexts=shop&lang=en&query=\" + newMessage + \"&sessionId=12345\", {\n        headers: new Headers({\n          Authorization: \"Bearer bc13467053ad45feaaa6f23c8bfafa9d\"\n        })\n      });\n      fetch(request).then(response => response.json()).then(json => {\n        var botResponse = json.result.fulfillment.speech;\n        this.setState({\n          botMessages: updatedBotMessages.concat(botResponse),\n          botLoading: false\n        });\n      }).catch(error => {\n        console.log(\"ERROR:\", error);\n        this.setState({\n          botMessages: updatedBotMessages.concat('?'),\n          botLoading: false\n        });\n      });\n    };\n\n    this.scrollBubble = element => {\n      if (element != null) {\n        element.scrollIntoView(true);\n      }\n    };\n\n    this.showMessages = () => {\n      var userMessages = this.state.userMessages;\n      var botMessages = this.state.botMessages;\n      var allMessages = [];\n      var i = 0;\n\n      for (; i < userMessages.length; i++) {\n        if (i === userMessages.length - 1) {\n          //if bot replied to last message\n          if (botMessages[i]) {\n            allMessages.push(React.createElement(UserBubble, {\n              message: userMessages[i],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }));\n            allMessages.push(React.createElement(BotBubble, {\n              message: botMessages[i],\n              thisRef: this.scrollBubble,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }));\n          } else {\n            allMessages.push(React.createElement(UserBubble, {\n              message: userMessages[i],\n              thisRef: this.scrollBubble,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }));\n          }\n\n          break;\n        }\n\n        allMessages.push(React.createElement(UserBubble, {\n          message: userMessages[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n        allMessages.push(React.createElement(BotBubble, {\n          message: botMessages[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      }\n\n      allMessages.unshift(React.createElement(BotBubble, {\n        message: this.state.botGreeting,\n        thisRef: i === 0 ? this.scrollBubble : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"msg-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, allMessages);\n    };\n\n    this.onInput = event => {\n      if (event.key === \"Enter\") {\n        var userInput = event.target.value;\n        this.updateUserMessages(userInput);\n        event.target.value = \"\";\n      }\n\n      if (event.target.value != \"\") {\n        event.target.parentElement.style.background = 'rgba(69,58,148,0.6)';\n      } else {\n        event.target.parentElement.style.background = 'rgba(255, 255, 255, 0.6)';\n      }\n    };\n\n    this.onClick = () => {\n      var inp = document.getElementById(\"chat\");\n      var userInput = inp.value;\n      this.updateUserMessages(userInput);\n      inp.value = \"\";\n    };\n\n    this.state = data;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Header, {\n      headerText: this.state.headerText,\n      pText: this.state.pText,\n      p2Text: this.state.p2Text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(ChatHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), this.showMessages(), React.createElement(UserInput, {\n      onInput: this.onInput,\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass UserBubble extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"user-message-container\",\n      ref: this.props.thisRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-bubble user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.message));\n  }\n\n}\n\nclass BotBubble extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bot-message-container\",\n      ref: this.props.thisRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bot-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chat-bubble bot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.props.message));\n  }\n\n}\n\nvar Header = props => {\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \" \", props.headerText, \" \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \" \", props.pText, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \" \", props.p2Text, \" \"));\n};\n\nvar ChatHeader = props => {\n  return React.createElement(\"div\", {\n    className: \"chat-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }));\n};\n\nvar UserInput = props => {\n  return React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"chat\",\n    type: \"text\",\n    onKeyPress: props.onInput,\n    placeholder: \"type something\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"input-submit\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212\n  },\n  __self: this\n}), document.getElementById(\"app\"));","map":{"version":3,"sources":["/Users/danbikim/Development/Capstone/client/src/components/chat/Chat.js"],"names":["data","headerText","pText","p2Text","userMessages","botMessages","botGreeting","botLoading","App","React","Component","constructor","props","updateUserMessages","newMessage","updatedMessages","state","updatedBotMessages","setState","concat","request","Request","headers","Headers","Authorization","fetch","then","response","json","botResponse","result","fulfillment","speech","catch","error","console","log","scrollBubble","element","scrollIntoView","showMessages","allMessages","i","length","push","unshift","onInput","event","key","userInput","target","value","parentElement","style","background","onClick","inp","document","getElementById","render","UserBubble","thisRef","message","BotBubble","Header","ChatHeader","UserInput","ReactDOM"],"mappings":"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","sourcesContent":["//Thanks to the following for help:\n// * https://codepen.io/johnludena/pen/JvMvzB\n// * https://codepen.io/jenning/pen/JZzeJW\n\nvar data = {\n    headerText: \"hello hello âœ¨\",\n    pText: \"I'm one (1) cute bot!\",\n    p2Text: \"Made with React + Dialogflow\",\n    userMessages: [],\n    botMessages: [],\n    botGreeting: \"oh hi! who are you?\",\n    botLoading: false\n  };\n  \n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = data;\n    }\n  \n    updateUserMessages = newMessage => {\n      if (!newMessage){\n        return;  \n      }\n      \n      var updatedMessages = this.state.userMessages;\n  \n      var updatedBotMessages = this.state.botMessages;\n  \n      this.setState({\n        userMessages: updatedMessages.concat(newMessage),\n        botLoading: true\n      });\n  \n      // Replace with your Dialogflow client token\n      var request = new Request(\n        \"https://api.dialogflow.com/v1/query?v=20150910&contexts=shop&lang=en&query=\" +\n          newMessage +\n          \"&sessionId=12345\",\n        {\n          headers: new Headers({\n            Authorization: \"Bearer bc13467053ad45feaaa6f23c8bfafa9d\"\n          })\n        }\n      );\n  \n      fetch(request)\n        .then(response => response.json())\n        .then(json => {\n          var botResponse = json.result.fulfillment.speech;\n  \n          this.setState({\n            botMessages: updatedBotMessages.concat(botResponse),\n            botLoading: false\n          });\n        })\n        .catch(error => {\n          console.log(\"ERROR:\", error);\n           this.setState({\n            botMessages: updatedBotMessages.concat('?'),\n            botLoading: false\n          });\n        });\n    };\n  \n    scrollBubble = element => {\n      if (element != null) {\n        element.scrollIntoView(true);\n      }\n    };\n  \n    showMessages = () => {\n      var userMessages = this.state.userMessages;\n      var botMessages = this.state.botMessages;\n  \n      var allMessages = [];\n    \n      var i = 0;\n      for (; i < userMessages.length; i++) {\n        if (i === userMessages.length - 1) {\n          //if bot replied to last message\n          if (botMessages[i]) {\n            allMessages.push(<UserBubble message={userMessages[i]} />);\n            allMessages.push(\n              <BotBubble message={botMessages[i]} thisRef={this.scrollBubble} />\n            );\n          } else {\n            allMessages.push(\n              <UserBubble message={userMessages[i]} thisRef={this.scrollBubble} />\n            );\n          }\n          break;\n        }\n  \n        allMessages.push(<UserBubble message={userMessages[i]} />);\n        allMessages.push(<BotBubble message={botMessages[i]} />);\n      }\n  \n      allMessages.unshift(\n        <BotBubble\n          message={this.state.botGreeting}\n          thisRef={i === 0 ? this.scrollBubble : \"\"}\n        />\n      );\n  \n      return <div className=\"msg-container\">{allMessages}</div>;\n    };\n  \n    onInput = event => {\n      if (event.key === \"Enter\") {\n        var userInput = event.target.value;\n  \n        this.updateUserMessages(userInput);\n        event.target.value = \"\";\n      }\n      \n      if (event.target.value!=\"\"){\n        event.target.parentElement.style.background = 'rgba(69,58,148,0.6)';\n      }\n      else{\n        event.target.parentElement.style.background = 'rgba(255, 255, 255, 0.6)';\n      }\n    };\n  \n    onClick = () => {\n      var inp = document.getElementById(\"chat\");\n      var userInput = inp.value;\n  \n      this.updateUserMessages(userInput);\n      inp.value = \"\";\n    };\n  \n    render() {\n      return (\n        <div className=\"app-container\">\n          <Header\n            headerText={this.state.headerText}\n            pText={this.state.pText}\n            p2Text={this.state.p2Text}\n          />\n          <div className=\"chat-container\">\n            <ChatHeader />\n            {this.showMessages()}\n            <UserInput onInput={this.onInput} onClick={this.onClick} />\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class UserBubble extends React.Component {\n    render() {\n      return (\n        <div className=\"user-message-container\" ref={this.props.thisRef}>\n          <div className=\"chat-bubble user\">\n            {this.props.message}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class BotBubble extends React.Component {\n    render() {\n      return (\n        <div className=\"bot-message-container\" ref={this.props.thisRef}>\n          <div className=\"bot-avatar\" />\n          <div className=\"chat-bubble bot\">\n            {this.props.message}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  var Header = props => {\n    return (\n      <div className=\"header\">\n        <div className=\"header-img\" />\n        <h1> {props.headerText} </h1>\n        <h2> {props.pText} </h2>\n        <p> {props.p2Text} </p>\n      </div>\n    );\n  };\n  \n  var ChatHeader = props => {\n    return (\n      <div className=\"chat-header\">\n        <div className=\"dot\" />\n        <div className=\"dot\" />\n        <div className=\"dot\" />\n      </div>\n    );\n  };\n  \n  var UserInput = props => {\n    return (\n      <div className=\"input-container\">\n        <input\n          id=\"chat\"\n          type=\"text\"\n          onKeyPress={props.onInput}\n          placeholder=\"type something\"\n        />\n        <button className=\"input-submit\" onClick={props.onClick} />\n      </div>\n    );\n  };\n  \n  ReactDOM.render(<App />, document.getElementById(\"app\"));\n  "]},"metadata":{},"sourceType":"module"}