{"ast":null,"code":"var _jsxFileName = \"/Users/danbikim/Development/Capstone/client/src/components/player/Player.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst key = 'f4858bfd2ff200f8aa00968b994de933';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Player extends React.Component {\n  //https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13\n  constructor() {\n    super();\n    const params = this.getHashParams(); //console.log(params);\n\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams; //returns user's access token\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    axios({\n      baseURL: 'https://api.spotify.com/v1/tracks/11dFghVXANMlKmJXsNCbNl',\n      auth: {\n        username: 'f5e8e6f86fdd4361a33a3daaa5bcf808',\n        password: '71a41656726a455a9cc526e9cbf2b168'\n      }\n    }).then(res => console.log(res));\n    axios.get(\"http://api.musixmatch.com/ws/1.1/track.search?q_lyrics=hello&page_size=3&page=1&s_track_rating=desc&\").then(res => {\n      console.log(res);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      alt: \"album cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Check Now Playing\"), React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3\",\n      width: \"300\",\n      height: \"380\",\n      frameborder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/danbikim/Development/Capstone/client/src/components/player/Player.js"],"names":["React","axios","SpotifyWebApi","key","spotifyApi","Player","Component","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","console","log","setState","item","album","images","url","componentDidMount","baseURL","auth","username","password","res","get","render","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst key = 'f4858bfd2ff200f8aa00968b994de933';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Player extends React.Component {\n    //https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13\n    constructor(){\n      super();\n      const params = this.getHashParams();\n      //console.log(params);\n      const token = params.access_token;\n      if (token) {\n        spotifyApi.setAccessToken(token);\n      }\n      this.state = {\n        loggedIn: token ? true : false,\n        nowPlaying: { name: 'Not Checked', albumArt: '' }\n      }\n    }\n    getHashParams() {\n      var hashParams = {};\n      var e, r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q)\n      while (e) {\n         hashParams[e[1]] = decodeURIComponent(e[2]);\n         e = r.exec(q);\n      }\n      return hashParams; //returns user's access token\n    }\n    getNowPlaying(){\n      spotifyApi.getMyCurrentPlaybackState()\n        .then((response) => {\n          console.log(response);\n          this.setState({\n            nowPlaying: { \n                name: response.item.name, \n                albumArt: response.item.album.images[0].url\n              }\n          });\n        })\n    }\n\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\tbaseURL: 'https://api.spotify.com/v1/tracks/11dFghVXANMlKmJXsNCbNl',\n\t\t\tauth: { username: 'f5e8e6f86fdd4361a33a3daaa5bcf808', password: '71a41656726a455a9cc526e9cbf2b168'}\n\t\t\t}).then(res => console.log(res))\n\n\t\taxios.get(\"http://api.musixmatch.com/ws/1.1/track.search?q_lyrics=hello&page_size=3&page=1&s_track_rating=desc&\")\n\t\t.then(res=>{\n\t\t\tconsole.log(res)\n\t\t})\n\t}\n    render() {\n      return (\n            <div className=\"Player\">\n                <a href='http://localhost:8888' > Login to Spotify </a>\n                <div>\n                    Now Playing: { this.state.nowPlaying.name }\n                </div>\n                <div>\n                    <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }} alt=\"album cover\"/>\n                  </div>\n                { this.state.loggedIn &&\n                <button onClick={() => this.getNowPlaying()}>\n                    Check Now Playing\n                </button>\n                }\n                <iframe src=\"https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3\" width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n          </div>\n        );\n  }\n  }\n  \n  export default Player;"]},"metadata":{},"sourceType":"module"}