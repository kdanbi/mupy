{"ast":null,"code":"var _jsxFileName = \"/Users/danbikim/Development/Capstone/client/src/components/player/Player.js\";\nimport React, { Component } from 'react';\nimport '../../App.scss'; //import SpotifyWebApi from 'spotify-web-api-js';\n\nimport SpotifyWebApiNode from 'spotify-web-api-node';\nvar spotifyApi = new SpotifyWebApiNode({\n  clientId: 'f5e8e6f86fdd4361a33a3daaa5bcf808',\n  clientSecret: '71a41656726a455a9cc526e9cbf2b168',\n  redirectUri: 'http://localhost:8888/callback'\n});\nexport default class Player extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    spotifyApi.searchPlaylists('stressed').then(function (data) {\n      console.log('Found playlists are', data.body);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n    return React.createElement(\"div\", {\n      className: \"player__login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Login to Spotify \"));\n  }\n\n}","map":{"version":3,"sources":["/Users/danbikim/Development/Capstone/client/src/components/player/Player.js"],"names":["React","Component","SpotifyWebApiNode","spotifyApi","clientId","clientSecret","redirectUri","Player","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","render","searchPlaylists","data","console","log","body","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,IAAIC,UAAU,GAAG,IAAID,iBAAJ,CAAsB;AACrCE,EAAAA,QAAQ,EAAE,kCAD2B;AAErCC,EAAAA,YAAY,EAAE,kCAFuB;AAGrCC,EAAAA,WAAW,EAAE;AAHwB,CAAtB,CAAjB;AAMA,eAAe,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC5CO,EAAAA,WAAW,GAAE;AACX;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACG,YAArB;;AACA,QAAID,KAAJ,EAAW;AACTR,MAAAA,UAAU,CAACU,cAAX,CAA0BF,KAA1B;AACD;;AACD,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEJ,KAAK,GAAG,IAAH,GAAU,KADd;AAEXK,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC;AAFD,KAAb;AAID;;AACDR,EAAAA,aAAa,GAAG;AACd,QAAIS,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;AAEAN,IAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;;AACA,WAAOF,CAAP,EAAU;AACPD,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,MAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;AACF;;AACD,WAAOH,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAE;AACb1B,IAAAA,UAAU,CAAC2B,yBAAX,GACGC,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZjB,QAAAA,UAAU,EAAE;AACRC,UAAAA,IAAI,EAAEe,QAAQ,CAACE,IAAT,CAAcjB,IADZ;AAERC,UAAAA,QAAQ,EAAEc,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAFhC;AADA,OAAd;AAMD,KARH;AASD;;AACDC,EAAAA,MAAM,GAAG;AACPnC,IAAAA,UAAU,CAACoC,eAAX,CAA2B,UAA3B,EACCR,IADD,CACM,UAASS,IAAT,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,IAAI,CAACG,IAAxC;AACD,KAHD,EAGG,UAASC,GAAT,EAAc;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCE,GAArC;AACD,KALD;AAMA,WACF;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,CADE;AAKD;;AAhD2C","sourcesContent":["import React, { Component } from 'react';\nimport '../../App.scss';\n//import SpotifyWebApi from 'spotify-web-api-js';\nimport SpotifyWebApiNode from 'spotify-web-api-node';\n\nvar spotifyApi = new SpotifyWebApiNode({\n  clientId: 'f5e8e6f86fdd4361a33a3daaa5bcf808',\n  clientSecret: '71a41656726a455a9cc526e9cbf2b168',\n  redirectUri: 'http://localhost:8888/callback'\n});\n\nexport default class Player extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' }\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }\n        });\n      })\n  }\n  render() {\n    spotifyApi.searchPlaylists('stressed')\n    .then(function(data) {\n      console.log('Found playlists are', data.body);\n    }, function(err) {\n      console.log('Something went wrong!', err);\n    });\n    return (\n\t\t<div className=\"player__login\">\n\t\t\t<a href='http://localhost:8888' > Login to Spotify </a>\n\t\t</div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}